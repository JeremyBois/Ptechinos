units:
  kx: u # 19mm MX spacing
  ky: u # 19mm MX spacing
  px: 2
  py: 2

  # visual_x/_y are built in units
  # keycaps size in demo.dxf
  visual_x: 18
  visual_y: 17
points:
  key:
    footprints:
      choc_hotswap:
        type: choc
        params:
          hotswap: true
          reverse: true
          keycaps: true
        nets:
          # from: P1
          # to: P2
          from: =colrow
          to: =column_net
      choc:
        type: choc
        anchor:
          rotate: 180
        params:
          hotswap: false
          reverse: true
          keycaps: true
        nets:
          # from: P1
          # to: P2
          from: =colrow
          to: =column_net
      diode:
        type: diode
        nets:
          # from: P3
          # to: P4
          from: =colrow
          to: =row_net
        anchor:
          shift: [0, -5]
  zones:
    matrix:
      key.padding: kx
      columns:
        pinky:
          origin: [ 0, -1ky ]
          stagger: 0 ky
          spread: kx
          rotate: 8
          key:
            column_net: P20
          rows:
            top:
              shift: [-kx, -ky]
            home:
              shift: [0, 0]
            bottom:
              shift: [0, 0]
        ring:
          origin: [ 0, -1ky ]
          stagger: 0.6 ky
          spread: 0.97kx
          rotate: -6
          key:
            column_net: P19
        middle:
          origin: [ 0, -1ky ]
          stagger: 0.2 ky
          spread: kx
          rotate: -2
          key:
            column_net: P18
        index:
          origin: [ 0, -1ky ]
          stagger: -0.3 ky
          spread: 0.97kx
          rotate: -4
          key:
            column_net: P15
        inner:
          origin: [ 0, -1ky ]
          stagger: -0.1 ky
          spread: kx
          key:
            column_net: P14
      rows:
        bottom:
          row_net: P6
        home:
          row_net: P5
        top:
          row_net: P4
    rotaryKey:
      anchor:
        ref: matrix_inner_bottom
        shift: [0.05kx, -0.25ky]
      columns:
        far:
          spread: 1kx
          origin: [-0.5 kx, -0.5 ky]
          rotate: -15
          key:
            column_net: P14
      rows:
        bottom:
          row_net: P6
    thumbfan:
      anchor:
        ref: matrix_inner_bottom
        shift: [-2.6kx, -1.2ky]
      columns:
        near:
          spread: 2.2kx
          origin: [-0.5 kx, -0.5 ky]
          rotate: -5
          key:
            column_net: P19
        home:
          spread: 1kx
          rotate: -18
          origin: [-0.5 kx, -0.6 ky]
          key:
            column_net: P18
        far:
          spread: 1kx
          rotate: -18
          origin: [-0.5 kx, -0.6 ky]
          key:
            column_net: P15
      rows:
        thumb:
          row_net: P7
outlines:
  exports:
    raw:
      - type: keys
        side: left
        size: [kx, ky]
        corner: px
    thumbfan_glue:
      - type: polygon
        points:
          - ref: thumbfan_far_thumb
            shift: [0.58 kx, 0.5 ky ]
          - ref: thumbfan_far_thumb
            shift: [0.58 kx, -0.5 ky]
          - ref: thumbfan_near_thumb
            shift: [0.5 px, -0.52 ky]
          - ref: matrix_pinky_bottom
            shift: [-0.5kx, -0.5ky]
          - ref: matrix_pinky_bottom
            shift: [-1.5kx, 0.5ky]
          - ref: matrix_pinky_top
            shift: [-0.65kx, 0.4ky]
          - ref: matrix_ring_top
            shift: [-0.45kx, 0.5ky]
          - ref: matrix_ring_top
            shift: [kx, 0.55ky]
          - ref: matrix_inner_home
            shift: [0, -0.25ky]
          - ref: matrix_inner_home
            shift: [1.75 kx, -ky]
    rounded_thumbfan_glue:
      # Apply a fillet to the polygon specified above to round the corners
      - type: outline
        name: thumbfan_glue
        fillet: 3px
    patch_ring:
      main:
        type: rectangle
        anchor:
          ref:
            - matrix_ring_bottom
          shift: [-0.4(kx + px), -ky]
        size: [2kx, 3.5ky]
        corner: px
    patch_middle:
      main:
        type: rectangle
        anchor:
          ref:
            - matrix_middle_bottom
          shift: [-0.5(kx + px), -ky]
        size: [1.15kx, 3.5ky]
        corner: px
    patch_index:
      main:
        type: rectangle
        anchor:
          ref:
            - matrix_index_bottom
          shift: [-0.8kx, 0]
        size: [1.3kx, 2.5ky]
        corner: px
    patch_inner:
      main:
        type: rectangle
        anchor:
          ref:
            - matrix_inner_bottom
          shift: [-0.8kx, 0]
        size: [1.35kx, 2.5ky]
        corner: px
    controller_area:
      - type: polygon
        points:
          - ref: matrix_inner_home
            shift: [0, -0.25ky]
          - ref: matrix_inner_top
            shift: [0, 0.5ky]
          - ref: matrix_inner_top
            shift: [44, 0.5ky]
          - ref: matrix_inner_bottom
            shift: [36, -20]
    rounded_controller_area:
      # Apply a fillet to the polygon specified above to round the corners
      - type: outline
        name: controller_area
        fillet: 2px
    encoder_glue:
      main:
        type: rectangle
        anchor:
          ref:
            - rotaryKey_far_bottom
          shift: [-7, -11.1]
        size: [14, 18.1]
    switches:
      main:
        type: keys
        side: left
        size: 14 # 14mmx14mm cutouts will fit Choc and MX switches
        bound: false
    keycaps:
      main:
        type: keys
        side: left
        size: [kx, ky]
        bound: false
        corner: 1
    keywell:
      patch_inner:
        type: outline
        name: patch_inner
        operation: add
      patch_index:
        type: outline
        name: patch_index
        operation: add
      patch_middle:
        type: outline
        name: patch_middle
        operation: add
      patch_ring:
        type: outline
        name: patch_ring
        operation: add
      rounded_thumbfan_glue:
        type: outline
        name: rounded_thumbfan_glue
        operation: add
    base_outline:
      main:
        type: outline
        name: keywell
      controller:
        type: outline
        name: rounded_controller_area
        operation: add
    screw_holes:
      top_left:
        type: circle
        anchor:
          - ref: matrix_middle_home
            shift: [-32.815, 11.84]
        radius: 1.1
      bottom_left:
        type: circle
        anchor:
          - ref: matrix_middle_home
            shift: [-52.8, -32.45]
        radius: 1.1
      top_right:
        type: circle
        anchor:
          - ref: matrix_middle_home
            shift: [31.155, 2.05]
        radius: 1.1
      bottom_right:
        type: circle
        anchor:
          - ref: matrix_middle_home
            shift: [29.155, -39.51]
        radius: 1.1
      thumb:
        type: circle
        anchor:
          - ref: matrix_middle_home
            shift: [73.765, -58.71]
        radius: 1.1
    mounting_holes:
      $extends: outlines.exports.screw_holes
      top_left:
        radius: 1.9
      bottom_left:
        radius: 1.9
      top_right:
        radius: 1.9
      bottom_right:
        radius: 1.9
      thumb:
        radius: 1.9
    guard_holes:
      guard_top:
        type: circle
        anchor:
          - ref: matrix_middle_home
            shift: [78.245, -0.46]
        radius: 1.1
      guard_bottom:
        type: circle
        anchor:
          - ref: matrix_middle_home
            shift: [59.265, -21.25]
        radius: 1.1
    pcb_holes:
      mounting_holes:
        type: outline
        name: mounting_holes
        operation: add
      guard_holes:
        type: outline
        name: guard_holes
        operation: add
    pcb:
      main:
        type: outline
        name: base_outline
    bottom_plate:
      main:
        type: outline
        name: base_outline
      screw_holes:
        type: outline
        name: screw_holes
        operation: subtract
    top_plate:
      main:
        type: outline
        name: keywell
      switches:
        type: outline
        name: switches
        operation: subtract
      screw_holes:
        type: outline
        name: screw_holes
        operation: subtract
      encoder:
        type: outline
        name: encoder_glue
        operation: subtract
    pcb_with_holes:
      main:
        type: outline
        name: pcb
      pcb_holes:
        type: outline
        name: pcb_holes
        operation: subtract
    render:
      main:
        type: outline
        name: pcb
      switches:
        type: outline
        name: switches
        operation: subtract
      screw_holes:
        type: outline
        name: screw_holes
        operation: subtract
      guard_holes:
        type: outline
        name: guard_holes
        operation: subtract
pcbs:
  top_plate:
    # include JLCJLCJLCJLC text somewhere
    include_keys: false
    outlines:
      edge:
        outline: plate
        layer: Edge.Cuts
    footprints:
      jlc_order_number:
        type: text
        anchor:
          ref:
            - matrix_ring_home
          shift: [-0.25 kx, 0.5 ky]
        params:
          text: "JLCJLCJLCJLC"
          justify: left
  bottom_plate:
    include_keys: false
    outlines:
      edge:
        outline: bottom_outline
        layer: Edge.Cuts
  board:
    # @IMPORTANT Not used because handled manually in kicad based on shematic and outlines
    outlines:
      edge:
        outline: pcb
        layer: Edge.Cuts
        # TODO there's a way to add stuff to the silkscreen layer
    footprints:
      mcu_l:
        type: promicro
        params:
          orientation: up
          batteryPins: true
        anchor:
          ref:
            - matrix_inner_top
          shift: [20, -11]
          rotate: 270
      mcu_r:
        type: promicro
        params:
          orientation: down
          batteryPins: true
        anchor:
          ref:
            - matrix_inner_top
          shift: [22.5, -12.25]
          rotate: 270
      pad_plus:
        type: pad
        anchor:
          ref:
            - matrix_inner_top
          shift: [23, -18]
          rotate: 0
        params:
          front: true
          back: true
          width: 1.5
          height: 1.5
          text: "B+"
        nets:
          net: Braw
      pad_minus:
        type: pad
        anchor:
          ref:
            - matrix_inner_top
          shift: [23, -15]
          rotate: 0
        params:
          front: true
          back: true
          width: 1.5
          height: 1.5
          text: "B-"
        nets:
          net: Bminus
      trrs_l:
        type: trrs
        anchor:
          ref:
            - matrix_inner_bottom
          shift: [32, -15]
          rotate: 270
        params:
          reverse: false
          symmetric: false
        # The naming of the nets on this footprint is different from the Corne schematics.
        nets:
          A: ""
          B: VCC
          C: GND
          D: P0
      trrs_r:
        type: trrs
        anchor:
          ref:
            - matrix_inner_bottom
          shift: [32, -13]
          rotate: 270
        params:
          reverse: true
          symmetric: false
        # The naming of the nets on this footprint is different from the Corne schematics.
        nets:
          A: ""
          B: VCC
          C: GND
          D: P0
      jumper_l:
        type: jumper
        anchor:
          ref:
            - matrix_inner_bottom
          shift: [23.5, 0]
          rotate: 270
        params:
          side: B
        nets:
          from: Braw
          to: Bplus
      jumper_r:
        type: jumper
        anchor:
          ref:
            - matrix_inner_bottom
          shift: [23.5, 0]
          rotate: 270
        params:
          side: F
        nets:
          from: Braw
          to: Bplus
      slider_l:
        type: slider
        anchor:
          ref:
            - matrix_inner_bottom
          shift: [30, 0]
          rotate: 270
        params:
          side: F
        nets:
          from: Braw
          to: Bplus
      slider_r:
        type: slider
        anchor:
          ref:
            - matrix_inner_bottom
          shift: [30, 0]
          rotate: 270
        params:
          side: B
        nets:
          from: Braw
          to: Bplus
      reset:
        type: button
        anchor:
          ref:
            - matrix_inner_bottom
          shift: [17, 0]
          rotate: 270
        params:
          variant: 2_pin_th
        nets:
          from: GND
          to: RST
      info_l:
        type: text
        anchor:
          ref:
            - matrix_pinky_bottom
          shift: [0.75 kx, 0]
        params:
          text: "Ptechinos\\nby pampi"
          justify: left
      info_r:
        type: text
        anchor:
          ref:
            - matrix_pinky_bottom
          shift: [0.75 kx, 0]
        params:
          layer: B.SilkS
          text: "Ptechinos\\nby pampi"
          justify: right mirror
